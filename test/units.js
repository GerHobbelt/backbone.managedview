// Generated by CoffeeScript 1.4.0
(function() {
  var _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    test("views", function() {
      var view;
      view = new Backbone.ManagedView;
      view.views["header"] = "headerView";
      return equal(view.views["header"], "headerView");
    });
    test("render", function() {});
    test("remove", function() {});
    test("collectViews", function() {
      var footer, header, item, view, views;
      header = (function(_super) {

        __extends(header, _super);

        function header() {
          return header.__super__.constructor.apply(this, arguments);
        }

        return header;

      })(Backbone.ManagedView);
      footer = (function(_super) {

        __extends(footer, _super);

        function footer() {
          return footer.__super__.constructor.apply(this, arguments);
        }

        return footer;

      })(Backbone.ManagedView);
      item = (function(_super) {

        __extends(item, _super);

        function item() {
          return item.__super__.constructor.apply(this, arguments);
        }

        return item;

      })(Backbone.ManagedView);
      view = new Backbone.ManagedView;
      view.views["header"] = new header;
      view.views["footer"] = new footer;
      view.views[".items"] = [new item, new item, new item];
      views = view.collectViews();
      return equal(views.length, 5);
    });
    test("renderViews", function() {});
    return test("removeViews", function() {});
  });

}).call(this);
